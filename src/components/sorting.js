import { sortMap } from "../lib/sort.js";

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º —Ç–∞–±–ª–∏—Ü—ã.
 *
 * @param {HTMLElement[]} columns - –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (–∫–∞–∂–¥–∞—è —Ö—Ä–∞–Ω–∏—Ç dataset.field –∏ dataset.value)
 * @returns {Function} —Ñ—É–Ω–∫—Ü–∏—è, –¥–æ–±–∞–≤–ª—è—é—â–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ query-–æ–±—ä–µ–∫—Ç
 */
export function initSorting(columns) {
  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä `sort` –≤ –∑–∞–ø—Ä–æ—Å.
   *
   * @param {Object} query - —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
   * @param {Object} state - —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã)
   * @param {HTMLElement?} action - —ç–ª–µ–º–µ–Ω—Ç, –≤—ã–∑–≤–∞–≤—à–∏–π –¥–µ–π—Å—Ç–≤–∏–µ (–∫–Ω–æ–ø–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏)
   * @returns {Object} –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π query —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º `sort`, –µ—Å–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞
   */
  return (query, state, action) => {
    let field = null;
    let order = null;

    // üîπ –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –ø–æ –∫–Ω–æ–ø–∫–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (action && action.name === "sort") {
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –∫–∞—Ä—Ç–µ sortMap (–Ω–∞–ø—Ä–∏–º–µ—Ä: none ‚Üí asc ‚Üí desc ‚Üí none)
      action.dataset.value = sortMap[action.dataset.value];

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª–µ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–∑ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
      field = action.dataset.field;
      order = action.dataset.value;

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
      columns.forEach((column) => {
        if (column.dataset.field !== action.dataset.field) {
          column.dataset.value = "none";
        }
      });
    } else {
      // üîπ –ï—Å–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–µ –º–µ–Ω—è–ª–∞—Å—å, –∏—â–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ–ª–æ–Ω–∫—É
      columns.forEach((column) => {
        if (column.dataset.value !== "none") {
          field = column.dataset.field;
          order = column.dataset.value;
        }
      });
    }

    // üîπ –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞ "field:direction", –µ—Å–ª–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞
    const sort = field && order !== "none" ? `${field}:${order}` : null;

    // üîπ –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä sort –≤ query –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    return sort ? Object.assign({}, query, { sort }) : query;
  };
}
